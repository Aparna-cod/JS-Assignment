1.Write the Code for all Data types.
Ans. JavaScript supports several data types including numbers, strings, booleans, arrays, objects, null, and undefined.

-String
var str1 = 'Hello, World!';    // Output: Hello, World!  
<p>var str2 = "His name is ‘John’";   // Output: His name is ‘John’</p>

-Number
var a=47;  // positive integer value
var b=629.5;  // floating point
var c=-5; // number with negative value

-Boolean
var a =10;
var b=9;
a==b // returns false

-Object
var student = {firstName: 'john', class: 7};

-Undefined
var x;   // undefined
console.log(x); // returns undefined

-Null
var x = null;
console.log(x);   // returns null


2. What are the uses of JavaScript Operators?
Ans. JavaScript operators operate the operands, these are symbols that are used to manipulate a certain value or operand.
Operators are used to performing specific mathematical and logical computations on operands.
In JavaScript, operators are used to compare values, perform arithmetic operations, etc.
Based on the types of operations these JS operators perform, we can divide them up into seven groups:
-Arithmetic Operators
-Assignment Operators
-Comparison Operators
-Logical Operators
-Ternary Operators
-The typeof Operator
-Bitwise Operators

3. Explain the Assignment Operator.
Ans.Assignment Operators are a part of Binary Operators which are included in Arithmetical Operators. They are used to assign values to a variable. The left hand operand of the assignment operator indicates variable and the right hand operand indicates value. 
    For example: =, + =, - =, / =, >> =, ^ =, ! = are few examples of Assignment Operators.

4. Explain the all Arithmetic Operators.
Ans.An arithmetic operation is specified by combining operands with one arithmetic operator. Arithmetic operations can also be specified by the ADD, SUBTRACT, DIVIDE, and MULTIPLY built-in functions.
    You can use the following operators in arithmetic operations:

+	Addition
-	Subtraction
*	Multiplication
⁄	Division
**	Exponentiation

5. What are the Binary Operators in js.
Ans.Binary operators take two operands, which can be variables, values, or expressions, and they perform operations on them. You can use binary operators for arithmetic, logical, and comparison operations.
  Examples of Binary Operators:
    -Addition (+) operator: Adds two numerical values together.
                            sum = 3 + 4; // sum is 7
    -Multiplication (*) operator: Multiplies two numerical values.
                                  let product = 5 * 6; // product is 30

    -Equality (==) operator: Compares two values for equality.
                             let isEqual = (x == y);// isEqual is false (assuming x and y are different)

6. Explain the Pre-Increment and Post Increment in js.
Ans. To use pre and post increment operators in JavaScript, you can follow these guidelines:

-Pre-increment: The pre-increment operator (++) increases the value of a variable by 1 before using its value. Here's an example:
javascript.
let num = 5;
console.log(++num); // Output: 6
console.log(num);   // Output: 6

-Post-increment: The post-increment operator (++) increases the value of a variable by 1 after using its value. Here's an example:
javascript.
let num = 5;
console.log(num++); // Output: 5
console.log(num);   // Output: 6

In both cases, the variable num is incremented by 1. However, the pre-increment operator ++ increases the value before it is used, while the post-increment operator ++ increases the value after it is used.
